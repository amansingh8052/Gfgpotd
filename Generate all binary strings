#JAVA CODE

class Solution {
    public ArrayList<String> binstr(int n) {
        ArrayList<String> result = new ArrayList<>();
        int total = 1 << n;
        
        for (int i = 0; i < total; i++) {
            String binary = Integer.toBinaryString(i);
            while (binary.length() < n) {
                binary = "0" + binary;
            }
            result.add(binary);
        }
        return result;
    }
}


# C++ CODE

class Solution {
  public:
    vector<string> binstr(int n) {
        vector<string> result;
        int total = 1 << n;

        for (int i = 0; i < total; i++) {
            string s = "";
            for (int j = n - 1; j >= 0; j--) {
                s.push_back(((i >> j) & 1) + '0');
            }
            result.push_back(s);
        }
        return result;
    }
};
