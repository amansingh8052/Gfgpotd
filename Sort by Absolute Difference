# JAVA CODE 

import java.util.*;

class Solution {
    public void rearrange(int[] arr, int x) {
        List<int[]> list = new ArrayList<>();
        for (int i = 0; i < arr.length; i++) {
            list.add(new int[]{arr[i], i});
        }

        Collections.sort(list, (a, b) -> {
            int diff1 = Math.abs(a[0] - x);
            int diff2 = Math.abs(b[0] - x);

            if (diff1 != diff2) return diff1 - diff2;
            return a[1] - b[1];
        });

        for (int i = 0; i < arr.length; i++) {
            arr[i] = list.get(i)[0];
        }
    }
}


# C++ CODE 

class Solution {
  public:
    void rearrange(vector<int> &arr, int x) {
        vector<pair<int,int>> vec; 
        for (int i = 0; i < (int)arr.size(); i++) {
            vec.push_back({arr[i], i});
        }

        stable_sort(vec.begin(), vec.end(), [&](auto &a, auto &b) {
            int diff1 = abs(a.first - x);
            int diff2 = abs(b.first - x);
            return diff1 < diff2; 
        });

        for (int i = 0; i < (int)arr.size(); i++) {
            arr[i] = vec[i].first;
        }
    }
};
