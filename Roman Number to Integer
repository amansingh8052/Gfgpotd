# JAVA CODE 

class Solution {
    public int romanToDecimal(String s) {
        // code here
        Map<Character, Integer> romanMap = new HashMap<>();
        romanMap.put('I', 1);
        romanMap.put('V', 5);
        romanMap.put('X', 10);
        romanMap.put('L', 50);
        romanMap.put('C', 100);
        romanMap.put('D', 500);
        romanMap.put('M', 1000);
        
        int result = 0;
        int n = s.length();
        
        for(int i = 0; i < n; i++){
            int currVal = romanMap.get(s.charAt(i));
            int nextVal = (i + 1 < n) ? romanMap.get(s.charAt(i+1)) : 0;
            
            if(currVal < nextVal){
                result -= currVal;
            }else {
                result += currVal;
            }
        }
        return result;
    }
}

#C++ CODE 

class Solution {
  public:
    int romanToDecimal(string &s) {
        unordered_map<char, int> romanMap = {
            {'I', 1},
            {'V', 5},
            {'X', 10},
            {'L', 50},
            {'C', 100},
            {'D', 500},
            {'M', 1000}
        };

        int result = 0;
        int n = s.length();

        for (int i = 0; i < n; ++i) {
            int currVal = romanMap[s[i]];
            int nextVal = (i + 1 < n) ? romanMap[s[i + 1]] : 0;

            if (currVal < nextVal) {
                result -= currVal;
            } else {
                result += currVal;
            }
        }

        return result;
    }
};
